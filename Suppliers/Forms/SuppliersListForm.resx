<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAChdJREFUeF7t
        WllzU8kVJqksU5VUJVXJW56Sp0nekspTqvKeH5CH5CWVeaEmWCwzAzMZliBgYCYgS95lbfdKsmQbbLzL
        so1hsLGNwZYMmM1g8CoBBow3vNsnfXq5usj3IsPYkiDuqq/Q7T7dt7/vnO4+ffG2rbJVtspW2Sr/z8W2
        3fZDs0H+OtMgDxLAe4JB5ITcOE39wslrDfIewH2C09QvxDCCxj5fG5QHr70XKPJdEiKMcpr6hRtqDvQu
        Q/DiNPXLlgBbAjDD9xWcpn7R6vQ+gdPUL8KwfXQx+Ygswr3xFRiZAorhSYDQoyWlvZv8HuJtWhgmQBth
        H368RMfAtrQXoIOQv/9iVSGDRNVkQkiGt2lhiBDtiqrJL8MIJ49IawE2mzwibQVIBnnEpgpwsW8KHP8N
        gM95SbNdD8kij9g0AS72TUKBsYL2cZ4KatpoIZnkERsmQJHjEvF2PfW6mnzh0UpouTel2DlO1isvFRAC
        IXlPZnBN+9sAx0xEHiHsOU39IgwFkXgIYki8wHiW/o4nj7CTJSHGEsBlIjzvMa0V6G3gOhlISB4h7DlN
        /SIM1WTUaH0wA7bjNcqA+LuF1GnZxiPZYa+GmC+nqV+EoXiJFtDbSNx2onaN5/WQSvKIDRXgTZFq8oiU
        CZAO5BGbKoBeHpAu5BGbJoBeHpBO5BEbJsB68gAkv1HnfDx8lgZNgokg+nOa+kUYxhMXSJQHCM9v1Dkf
        D29mvSbBRBD9OU39IgzjiQu8Lg9IdtgPT6xCdzgCtSVXoMgchLx/l0LuPj+FnTjHl9UIwcow9Nx4vHEC
        ILTygGSSH3y+DM2BXsj/slQhtl7k78j/KaeqXYShmMh6sPHkib0O+e5wFKwHziiEpMMytJW6YDTkhPG7
        TpgbclDgb6zDNumwpNgTRM0G6SNOd20RhmIyiZA0z5O6YEUYzDvddH5FX0kw2OkEeOpYF9DWS/oIfiaD
        XHJqr/cnnHasvIkAgnz/ozm6Bis87ZtGvtp/mc7LsssN4YALVscYsZkBJ1yrd0JljgTuI2Rz/lwG6xcy
        eI5KECiU4PYFFyyMMlvsE6p1gWWnEg2Xv9lu+xmnzsp6BRDk70fnwHmsivZxkhNCtG/kmg+Wh+j4eXtl
        xevzIw5oKXZB9h6FjC5QlFCdC1aexKIh7zOlvc1oPPMjTj+xADQPIERvjsxCf3QWHOQIRPvCI7GjEMlj
        RIix1gutM77z8hBkEo9l7ZYhEmbkcX3j2qf9SJvd3ARlgbsQCD+DhtvTELw1CXVdT6G04iZYj9cq45eZ
        JZgbdsDysA0GLtrpmHwMC6efWACRByBx+1GeBMWRR8+/TR4Qf8bjbl9w4DRtu97gouRf3HNCPvEo1uUf
        rYKazkdw7uGCgobbUxDoGYem/jml7mzzQ8j5ooT2kcmGOBG2wmyvFbpK7eLdK5YM6Q8JBcCwv/1oHuRv
        YqraT9TQ3ADbNzLsEXjU4Tv8X0sAZP0uRh10bWOd7WQQGvtmXiHfdH8Wsj7z03bzbi84s5qh5nKUtgWu
        jUPeoXLaVpnpogLM3rCC1+iidZkZ0oXXCqDe7XHTQxGQfLzn40kIvCn54clVxftDV1jot59hk807fBYa
        7zLyFwcX4BpZir1PFqD7yQoUFX4LudzbFOTUKK3spbZ1oaeKQDdrbFSEvnqbytbze00B4o86JLqZGR6i
        uydK54FnOJJ/OeiA7E9wkjJUt0c4+Xl4NjEN09MMIxMLcOM5UHQNvoTy4qvKsVlylolwuvImfXYckOEl
        iQAUwXlAHI/u3DUCpII8orb0Kp1HK0lkUIDrDU76jBseEkGg5wV5xOT0jCKAQOOFftrPvMsDdWSTbHow
        Bzn7WSL1sJlFwXkHG5ug7xUBUkUe4ctqoPMQ4Y/nPD7jbi8EuPFk8RUBnk+9XCMAwm9roX2LS3toP6/M
        copvXU62DIKxZaAI0EEm3D+eGvII60HmJTzyUACRztb1PFcECI2twujEPEwRz48T8n3jy5oChEbnoaq6
        F4I3J2m/8kYWFWIzjFwqpM8IRYBUkkfk7GWb1UKEJS+5n7J5NfW9VAS4rkFWD9efgdKvui1Cx/Idk6gA
        EyENAcREaG5PCCeTPCLrkyI6j0UuQP4+Nq+GO9PfWYCq1mE6VvFXLAIwLxC8XxFAeB6TH/zcpSaPmV58
        5ubNDIJkin0WQ/JFpC7eTqtvfF3hoTI6j/E+tgTc/Pyv7RpTiOAS0CKrBbQV/c7U99GxqixsD4i2aUSA
        OuzVdWKCok48o+dFndrz8XZafbXqMCvE56GrTICAjQlQWsGOM0T7qPaaV6OXAPeG9siS0k+yttKx2rx2
        /U1QHcaiTm/CIuxFnTrs1XZaffXqAmXd9Fkcg3cvsqMKc3tBpHlgAcIJogDJ4wnROcJSY8wes/YV07Ei
        LWuOwUlFAEEewx7z+vg8XdSp1zz+f2D8/9W9ru/r6vBTF85DJEKYBuM1F+sqSG4vRDg/QKLtNSL0PF0l
        5Oehmdv7/ExY3zGeDhOIRMic4S57RYBkbXhaGH6xAgX7WSosrsAiGUIPBsKx4xAjoX10ia5z3OwQ+LuN
        1J0jbcKusmWEJkSYTQ40F7LwD8TC35wh/w0FeIQPF65GUkZeoLGK/X0ffv3Bjxl4ny+3MG/lGyvpBUeQ
        S4Sq9lHI/pyFflMh2/wwFXYf5pchgzxMvwuk6x9L45ccjAL8EOI5wkTI2lcCp6tvAaa3WqQRDWTNY9jj
        7RD7lJ9ywQy/A3T4lOswEN4f09ug6s/lx0RjOsBMwhaXwvKwnZ7bZ03KxgU5X54Gj9wB5U399KJU3TYK
        ZeSok6wtkMUTKsQ5m1Mhj7dAHJO27XRfMhqN36cCpEMxGeQPycSiODn3IQ+cPsaSohxyG+xvZkcX3uV7
        q+2qm5w+fCSH6G9iOz4lH7QrmSXB2CmD99f81akvlh3e35JJ0X3IfdADXe4S6PaUgO8/LITRa1dKyPWY
        exL/HTxvgxa3A6otLrq7Fx+XoDbbSUM80hojjradfof6o+hM5i7pT/zVqS+mndLvyKQe4+Q8B72rSD5E
        yCPUItB2o4smMIJcIqDX3eLrD8Njs8H1R/7q1BfTdtsvyaSY5w8wzwvyiBZrMWTvZh83Mg3uJU4CnPsl
        OGd3wJ0A8Ta51U31WCnQ83fqbHTdO4iNsEeYDO5z5o89v+KvTo+SmSFl4+RkTfJ+1edvqTovw/ML8vsQ
        wXNWt27cIhveP2AbfI+/Nn1K9i75Dk6yw1EcR76YbH7M86YMuUb9Dd/4T/kDsmz+jhkcaafRE4dFgpAp
        QzKRvePPaUlcFDyKcNLtKgFaC/2Qs0ebvFax7JF/jju65V/SbxA5O3N+zJvSv5DQ3otE8z91Pzif54d6
        iw9y8SMo9aS7NhH5d76QROQHJAGrY4RjwPB+pzz5XQquUbKm/0qWg6Ngn7vSvEP+C29KUtm27X//W9K3
        xONJpgAAAABJRU5ErkJggg==
</value>
  </data>
</root>